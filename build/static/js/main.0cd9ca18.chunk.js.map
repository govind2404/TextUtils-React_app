{"version":3,"sources":["Components/Navbar.js","Components/Textform.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","titles","type","id","onClick","toggleMode","htmlFor","Textform","useState","Text","setText","style","color","heading","backgroundColor","rows","value","onChange","e","target","disabled","length","newText","toUpperCase","showalert","toLowerCase","navigator","clipboard","writeText","split","join","filter","Alert","height","alert","class","role","message","App","setalert","setmode","setTimeout","about","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0cd9ca18.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.titles}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n      </ul>\r\n      <div className={`form-check form-switch text-${props.mode===\"light\"?\"dark\":\"light\"}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{`Enable ${props.mode===\"dark\"?\"light\":\"dark\"}Mode`}</label>\r\n</div>\r\n\r\n    </div>\r\n  </div>\r\n</nav>\r\n       </>     \r\n        \r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\n\r\nexport default function Textform(props) {\r\n    const [Text, setText] = useState(\"\");\r\n\r\n    const ByClicking  = ()=> {\r\n    let newText=Text.toUpperCase();\r\n    setText(newText);\r\n    props.showalert(\"Text converted to Uppercase \",\"success\");\r\n    }\r\n    const ByloClicking  = ()=> {\r\n        let newText=Text.toLowerCase();\r\n        setText(newText);\r\n        props.showalert(\"Text converted to Lowercase \",\"success\");\r\n        }\r\n        const handleClearClick = ()=>{ \r\n            let newText = '';\r\n            setText(newText);\r\n            props.showalert(\"Text Cleared!\", \"success\");\r\n        }\r\n        const handleCopy = () => {\r\n            navigator.clipboard.writeText(Text); \r\n            props.showalert(\"Copied to Clipboard!\", \"success\");\r\n        }\r\n    \r\n        const handleExtraSpaces = () => {\r\n            let newText = Text.split(/[ ]+/);\r\n            setText(newText.join(\" \"));\r\n            props.showalert(\"Extra spaces removed!\", \"success\");\r\n        }\r\n    \r\n      \r\n\r\n    const ByChanging  = (e)=> {\r\n        setText(e.target.value);\r\n        \r\n        }\r\nreturn (\r\n    <>\r\n    <div className=\"container\" style= {{color: props.mode===\"dark\"?\"white\":\"black\"}}>\r\n    <h1>{props.heading}</h1>\r\n    \r\n        \r\n<div className=\"mb-3\">\r\n\r\n<textarea className=\"form-control\" style= {{backgroundColor: props.mode===\"dark\"?\"#212529\":\"white\", color: \"white\" ,color: props.mode===\"dark\"?\"white\":\"black\"}} id=\"text\" rows=\"10\"  value={Text} onChange={ByChanging}></textarea>\r\n</div>\r\n<button  disabled={Text.length===0} className=\"btn btn-primary mx-2\" onClick={ByClicking}>Convert to Upercase</button>\r\n<button  disabled={Text.length===0} className=\"btn btn-primary mx-2\" onClick={ByloClicking}>Convert to Lowercase</button>\r\n<button disabled={Text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n<button disabled={Text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleCopy}>Copy Text</button>\r\n<button disabled={Text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n\r\n</div>\r\n\r\n\r\n    \r\n    <div className=\"container my-3\" style= {{color: props.mode===\"dark\"?\"white\":\"black\"}}>\r\n        <h2>Your Text Summary</h2>\r\n        <p>{Text.split(\" \").filter((e)=> {return e.length!==0}).length } Words and{Text.length>0?Text.length:\"0\"} Characters</p>  \r\n        <p>{0.008*Text.split(\" \").filter((e)=> {return e.length!==0}).length} Minutes Read </p>\r\n        <h2>Preview</h2>\r\n        <p>{Text.length>0?Text:\"Enter Something to Preview\"}</p>\r\n    </div>\r\n    </>\r\n)\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        <div style={{height:\"50px\" }}>\r\n        {props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{props.alert.type}</strong>: {props.alert.message}\r\n  </div>}\r\n  </div>\r\n    )\r\n}\r\n","\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport Textform from './Components/Textform';\nimport React, { useState } from 'react'\nimport Alert from './Components/Alert';\n\n\n\n\n\nfunction App() {\n   const [alert, setalert] = useState(null);\n  const [mode, setmode] = useState(\"light\");\n  const showalert = (message,type) => \n  {\n     setalert(\n     {\n        message: message,\n        type:type\n     })\n     setTimeout(() =>{\n      setalert(null);\n     },1500)\n     \n   }\n\n const toggleMode= () => {\n     if(mode==='light'){\n        setmode(\"dark\");\n        document.body.style.backgroundColor=\"#333333\"\n        showalert(\"Dark mode has been enabled\",\"success\")\n     }\n     else {setmode(\"light\");\n     document.body.style.backgroundColor=\"white\";\n     showalert(\"Light mode has been enabled\",\"success\")}\n  }\n  return (\n  <>\n  \n     <Navbar titles=\"TextUtils\" about=\"About\" mode= {mode} toggleMode={ toggleMode}/>\n     <Alert alert={alert}/>\n     \n         \n          \n          <div className=\"container my-4\"> <Textform showalert={showalert} heading=\"Enter Your Text Below\" mode= {mode}/></div>\n        \n         \n</>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}